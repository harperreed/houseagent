# ABOUTME: Multistage Dockerfile for HouseAgent MQTT agent service
# ABOUTME: Uses UV for fast dependency installation and minimal production image

# Stage 1: Build dependencies
FROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS builder

WORKDIR /app

# Copy dependency files first for better layer caching
COPY pyproject.toml uv.lock ./

# Copy source code (needed for uv sync to install the package)
COPY houseagent ./houseagent

# Install dependencies to a virtual environment using lockfile
RUN uv sync --frozen --no-cache --no-dev

# Stage 2: Production runtime
FROM debian:bookworm-slim

# Install uv for runtime
COPY --from=ghcr.io/astral-sh/uv:latest /uv /bin/uv

WORKDIR /app

# Copy virtual environment from builder stage
COPY --from=builder /app/.venv /app/.venv

# Copy application code and prompts
COPY houseagent ./houseagent
COPY agent.py ./
COPY prompts ./prompts

# Ensure we use the virtual environment
ENV PATH="/app/.venv/bin:$PATH"

# Run the agent
CMD ["uv", "run", "agent.py"]
